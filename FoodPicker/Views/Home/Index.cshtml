@model IEnumerable<FoodPicker.Models.Food>
@{
    ViewBag.Title = "Home Page";
    var restaurantList = ViewBag.restaurants;
}




<div class="jumbotron">
    <h1>Welcome to FoodPicker</h1>
    <p class="lead">FoodPicker is a free easy website that allows you to search for types of food or if you are a resturant owner post food that can be found at your location! </p>

</div>

@* search bar *@
<div class="row">

    <div class="col-md-offset-3 col-md-6 custom-search-form">
        <form class="navbar-form" role="search">
            <div class="form-group">
                <input type="text" class="form-control custom-input-search" placeholder="Search">
            </div>
            <button type="submit" class="btn btn-default"><i class="glyphicon glyphicon-search"></i></button>
        </form>
    </div>
</div>
@* end of search bar *@

@* jyoung: map of moncton *@
<div class="row">
    <div class="col-md-12 ">

        <script src="http://maps.googleapis.com/maps/api/js"></script>
        <script>
            function initialize() {
                var mapProp = {
                    center: new google.maps.LatLng(46.0958, -64.7782),
                    zoom: 12,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                };
                var map = new google.maps.Map(document.getElementById("googleMap"), mapProp);

  @*jkhalack: add restaurant markers----------------------------------------------------------------------*@
                var geocoder = new google.maps.Geocoder();
                //var infowindow;
                var infowindow = new google.maps.InfoWindow();
            @foreach(var item in restaurantList)
                {
                    var pictureName = @item.RestaurantID + ".jpg";
                    <text>
                {
                    geocoder.geocode({ 'address': '@item.Address' }, function (results, status) {
                        if (status == google.maps.GeocoderStatus.OK) {
                            var marker = new google.maps.Marker({ map: map, position: results[0].geometry.location });

                            google.maps.event.addListener(marker, 'click', function () {
                                infowindow.setContent('<a href="@Url.Action("Details", "Restaurant", new { id = item.RestaurantID })"><h5>@item.Name</h5> <img src="~/RestoImages/@pictureName" width="100"/> </a>');
                                infowindow.open(map, marker);
                            });
                        }
                    });
                }
                </text>
            }
  @*jkhalack: end restaurant markers----------------------------------------------------------------------*@
            }
            google.maps.event.addDomListener(window, 'load', initialize);
        </script>
        <div id="googleMap" style="width:1135px;height:380px;" class="center-block"></div>
    </div>
</div>
@* end of map *@

<h3>Popular Foods</h3>
<div class="row">
    @{
        List<FoodPicker.ViewModels.FoodIndexData> pop = ViewBag.popular;
        foreach (var item in pop)
        {
            <div class="col-sm-6 col-md-3 center-block text-center">
                <div class="thumbnail">
                    <a href="@Url.Action("Details","Food", new { id = item.FoodID})">

                        <img src="~/FoodImages/@item.ImageName" alt="@item.Name" />
                    </a>
                </div>
                <a href="@Url.Action("Details","Food", new { id = item.FoodID})">
                    <div class="caption">
                        @item.Name
                    </div>
                    <div class="">
                        @Html.BootstrapRating().ReadOnly.Value((double)@item.AverageRating)
                    </div>
                </a>

            </div>

        }
    }
</div>

<div class="row">
   
        <h3>Recently Added</h3>
        @{
            List<FoodPicker.ViewModels.FoodIndexData> added = ViewBag.recentlyadded;
            
        foreach (var item in added)
        {
                <div class="col-sm-6 col-md-3 center-block text-center">
                    <div class="thumbnail">
                        <a href="@Url.Action("Details","Food", new { id = item.FoodID})">
                            <img src="~/FoodImages/@item.ImageName" alt="@item.Name" />
                        </a>
                    </div>
                        <a href="@Url.Action("Details","Food", new { id = item.FoodID})">
                            <div class="caption">
                                @item.Name
                            </div>
                            <div>
                                @if (@item.AverageRating == null)
                                {
                                    @Html.BootstrapRating().ReadOnly.Value(0)
                                }
                                else
                                {
                                    @Html.BootstrapRating().ReadOnly.Value((double)@item.AverageRating)
                                }
                            </div>
                        </a>
                   
                </div>

            }
        }
</div>
