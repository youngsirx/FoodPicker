@model FoodPicker.Models.Food

@{
    ViewBag.Title = "Details";

}

<h2>@Html.DisplayFor(model => model.Restaurant.Name)</h2>

<div>
    <h4>@Html.DisplayFor(model => model.Name)</h4>
    <hr />

    <div class="row">
        <div class="col-md-6">

            <img src="~/FoodImages/@Model.ImageName" alt="@Model.Name" />

        </div>

        <dl class="dl-horizontal col-md-6">
            <dt>
                @Html.DisplayNameFor(model => model.Restaurant.Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Restaurant.Name)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Name)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Price)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Price)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.DateAdded)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.DateAdded)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Categories)
            </dt>

            <dd>

                @*@Html.LabelFor(model => model.Categories, "Categoires", htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.DropDownList("Categoires", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Categories, "", new { @class = "text-danger" })*@
                <ul>
                    @{
                        var foodcategory = Model.Categories;

                        foreach (var category in foodcategory)
                        {
                            <li>@category.CategoryName</li>
                        }
                    }
                </ul>


            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.AverageRating)
            </dt>

            <dd>

                @if (Model.AverageRating == null)
                {
                    @Html.BootstrapRating().ReadOnly.Value(0)
                }
                else
                {
                    @Html.BootstrapRating().ReadOnly.Value((double)Model.AverageRating)
                }

            </dd>
            <br />

            @if (User.IsInRole("user"))

            {
                using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()


                 
                        <div class="form-group">
                            <div class="col-md-offset-4">
                                <input type="hidden" value="@Model.FoodID" name="FoodID" />
                                <input type="submit" value="Faveorite" class="btn btn-success" />
                            </div>
                        </div>
                    



                }
            }
        </dl>



    </div>
</div>


<div class="row">
    <div class="col-md-12">
        <h3>Description</h3>
        <p>

            @Html.DisplayFor(model => model.Description)
        </p>

    </div>
</div>

@*@{
        var action = (User.IsInRole("admin") ? "Index" : "Listing");
    }*@
@*<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.FoodID }) |
    @Html.ActionLink("Back to List", "Index")
</p>*@

<div>
    <p>
        @if ((User.IsInRole("owner")&& ViewBag.isOwner) || User.IsInRole("admin") )
            {
            <a class="btn btn-success" href="@Url.Action("Edit", new { id = Model.FoodID })">Edit</a>
        }
            <a class="btn btn-info" href="@Url.Action("Details","Restaurant",new { id = Model.RestaurantID })">Go to Restaurant</a>
            <a class="btn btn-info" href="@Url.Action("Index")">Go to Food List</a>
            
        

    </p>

</div>